---
- hosts: all
  tasks:
    - name: make sure some useful stuff and requirements are installed
      apt: name={{ item }} state=present
      become: true
      with_items:
        - screen
        - vim
        - zip
        - unzip
        - debconf-utils
    - name: set timezone to Europe/Berlin
      timezone:
        name: Europe/Berlin
      become: true
    - name: reinitialize timezone
      shell: dpkg-reconfigure -f noninteractive tzdata
      become: true
    - lineinfile:
        dest: /etc/locale.gen
        regexp: '^# de_DE\.UTF\-8 UTF\-8'
        line: 'de_DE.UTF-8 UTF-8'
      become: true
    - name: generate german locales
      shell: dpkg-reconfigure -f noninteractive locales
      become: true
    - name: set DE + EN as locales
      debconf:
        name: locales
        question: locales/locales_to_be_generated
        value: de_DE.UTF-8 UTF-8, en_US.UTF-8 UTF-8
        vtype: multiselect
      become: true
    - name: set DE default locale
      debconf:
        name: locales
        question: locales/default_environment_locale
        value: de_DE.UTF-8
        vtype: select
      become: true
    - name: switch to german locales
      shell: export LANG=de_DE.UTF-8 && export LANGUAGE=de_DE.UTF-8 && dpkg-reconfigure -f noninteractive locales
      become: true
    - name: make VIM default editor (for root-user)
      shell: 'echo SELECTED_EDITOR="/usr/bin/vim.basic" > /root/.selected_editor'
      args:
        executable: /bin/bash
      become: true
    - name: make VIM default editor (for vagrant-user)
      shell: 'echo SELECTED_EDITOR="/usr/bin/vim.basic" > /home/vagrant/.selected_editor'
      args:
        executable: /bin/bash
    - name: adding PPA of WebUpdateTeam (Ubuntu) (deb)
      apt_repository: repo='deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main' filename='webupd8team-java' state=present
      become: true
    - name: adding PPA of WebUpdateTeam (Ubuntu) (deb-src)
      apt_repository: repo='deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main' filename='webupd8team-java-src' state=present
      become: true
    - name: adding PPA signing key of WebUpdateTeam (Ubuntu)
      apt_key: keyserver="hkp://keyserver.ubuntu.com:80" id=EEA14886 state=present
      become: true
    - name: refresh APT cache
      apt: update_cache=yes
      become: true

    - name: auto-accept Oracle JDK 8 license
      debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'
      become: true

    - name: installing Oracle JDK 8
      apt: name=oracle-java8-installer state=present
      become: true

    - name: installing Oracle JDK 8 strong encryption files
      apt: name=oracle-java8-unlimited-jce-policy state=present
      become: true

    - name: set Oracle JDK 8 as default
      apt: name=oracle-java8-set-default state=present
      become: true

# make some preparations
    - name: make sure system is up2date
      shell: apt-get update && apt-get upgrade -y -qq
      args:
        executable: /bin/bash
      become: true
# install chrome browser from google
    - apt_key:
        url: "https://dl-ssl.google.com/linux/linux_signing_key.pub"
        state: present
      become: true
    - name: adding PPA of Google (deb)
      apt_repository: repo='deb http://dl.google.com/linux/chrome/deb/ stable main' filename='google-chrome' state=present
      become: true
    - name: install chrome browser
      apt: name=google-chrome-stable state=present
      become: true
      
# prepare webdriver (list of webdrivers can be taken from https://seleniumhq.github.io/docs/wd.html#quick_reference)
# https://github.com/mozilla/geckodriver/releases
    - name: download geckodriver if needed
      get_url:
        url: https://github.com/mozilla/geckodriver/releases/download/v0.14.0/geckodriver-v0.14.0-linux64.tar.gz
        dest: /vagrant/data/geckodriver-v0.14.0-linux64.tar.gz
    - name: extract webdriver implementation for Firefox
      unarchive:
        src: /vagrant/data/geckodriver-v0.14.0-linux64.tar.gz
        dest: /home/vagrant/
        remote_src: true
# https://chromedriver.storage.googleapis.com/
    - name: download chromedriver if needed
      get_url:
        url: https://chromedriver.storage.googleapis.com/2.27/chromedriver_linux64.zip
        dest: /vagrant/data/chromedriver_linux64.zip
    - name: extract webdriver implementation for Chrome
      unarchive:
        src: /vagrant/data/chromedriver_linux64.zip
        dest: /home/vagrant/
        remote_src: true

# the following commands run with "display 0" being set, because we need to open the browser on the shown display !!!
# http://stackoverflow.com/a/3664215/1961102
#
# prepare selenium cluster
# https://github.com/SeleniumHQ/selenium/wiki/Grid2
    - name: download selenium server standalone if needed
      get_url:
        url: http://selenium-release.storage.googleapis.com/3.0/selenium-server-standalone-3.0.1.jar
        dest: /vagrant/data/selenium-server-standalone-3.0.1.jar
    - name: run SELENIUM GRID 2 (hub)
      shell: source /etc/profile.d/jdk.sh && export DISPLAY=:0 && java -jar /vagrant/data/selenium-server-standalone-3.0.1.jar -role hub &
      args:
        executable: /bin/bash

# run selenium node with geckodriver
    - name: run SELENIUM GRID 2 (node - firefox)
      shell: source /etc/profile.d/jdk.sh && export DISPLAY=:0 && java -Dwebdriver.gecko.driver=/home/vagrant/geckodriver -jar /vagrant/data/selenium-server-standalone-3.0.1.jar -role node -hub http://localhost:4444/grid/register -browser browserName=firefox,version=45.7,platform=LINUX,maxInstances=5,firefox_binary=/usr/lib/firefox -port 5555 &
      args:
        executable: /bin/bash

# run selenium node with chromedriver
    - name: run SELENIUM GRID 2 (node - chrome)
      shell: source /etc/profile.d/jdk.sh && export DISPLAY=:0 && java -Dwebdriver.chrome.driver=/home/vagrant/chromedriver -jar /vagrant/data/selenium-server-standalone-3.0.1.jar -role node -hub http://localhost:4444/grid/register -browser browserName=chrome,version=56.0,platform=LINUX,maxInstances=5,chrome_binary=/usr/bin/google-chrome -port 5556 &
      args:
        executable: /bin/bash